df$MaxTempMean11 <- dplyr::lag(df$leadMean11, n = 5)
#verify that MaxTempMean11 is accurately calculating the mean Max temp for the prior 11 days.
c(mean(df[6:16,7]), df[16,18]) #manually calculated mean matches MaxTempMean11
df$leadMax19 <- dplyr::lead(df$MaxTemp, n = 9)
df$leadMean19 <- zoo::rollmean(df$leadMax19, k=19, fill = NA, align = 'right')
df$MaxTempMean19 <- dplyr::lag(df$leadMean19, n = 9)
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the prior 11 days.
c(mean(df[10:28,7]), df[28,21]) #manually calculated mean should match MaxTempMean11
df$leadPrecip11 <- dplyr::lead(df$Precip, n = 5)
View(df)
df$leadSum11 <- zoo::rollsum(df$leadPrecip11, k=11, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollsum(df$Precip, k=3, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollsum(df$Precip, k=11, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollsum(df$Precip, k=5, fill = NA, align = 'right')
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
View(df)
df$leadPrecip11 <- zoo::rollsum(df$Precip, k=11, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollsum(df$Precip, k=3, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, k=5, FUN=sum, fill = NA)
df$leadPrecip11 <- zoo::rollapply(df$Precip, k=5, width=1, FUN=sum, fill = NA)
View(df)
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=1, by = 5, FUN=sum, fill = NA)
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=1, by = 5, FUN=sum, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=1, FUN=sum, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, fill = NA, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, fill = NA, align = 'left')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'left')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'right')
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'right', fill = NA)
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'right', fill = NA, partial = TRUE)
df$leadPrecip11 <- zoo::rollapply(df$Precip, width=5, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
df$Precip11 <- zoo::rollapply(df$Precip, width=11, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the prior 11 days.
c(sum(df[1:11,10]), df[11,17]) #manually calculated mean should match MaxTempMean11
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the prior 11 days.
c(sum(df[1:11,10], na.rm = TRUE), df[11,17]) #manually calculated mean should match MaxTempMean11
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
#create columns to contain
df$leadMax11 <- dplyr::lead(df$MaxTemp, n = 5)
df$leadMean11 <- zoo::rollmean(df$leadMax11, k=11, fill = NA, align = 'right')
df$MaxTempMean11 <- dplyr::lag(df$leadMean11, n = 5)
#verify that MaxTempMean11 is accurately calculating the mean Max temp for the previous 11 days.
c(mean(df[6:16,7]), df[16,18]) #manually calculated mean matches MaxTempMean11
df$leadMax19 <- dplyr::lead(df$MaxTemp, n = 9)
df$leadMean19 <- zoo::rollmean(df$leadMax19, k=19, fill = NA, align = 'right')
df$MaxTempMean19 <- dplyr::lag(df$leadMean19, n = 9)
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the previous 19 days.
c(mean(df[10:28,7]), df[28,21]) #manually calculated mean should match MaxTempMean11
df$Precip11 <- zoo::rollapply(df$Precip, width=11, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that TotPrecip11 is accurately calculating the summed precip for the previous 11 days.
c(sum(df[1:11,10], na.rm = TRUE), df[11,22]) #manually calculated mean should match MaxTempMean11
df$TotPrecip19 <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
df$TotPrecip19 <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
```{r code check}
#verify that TotPrecip19 is accurately calculating the summed precip for the previous 11 days.
c(sum(df[1:19,10], na.rm = TRUE), df[19,23]) #manually calculated mean should match MaxTempMean11
View(df)
#verify that TotPrecip19 is accurately calculating the summed precip for the previous 11 days.
c(sum(df[11:29,10], na.rm = TRUE), df[29,23]) #manually calculated mean should match MaxTempMean11
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
#create columns to contain
df$leadMax11 <- dplyr::lead(df$MaxTemp, n = 5)
df$leadMean11 <- zoo::rollmean(df$leadMax11, k=11, fill = NA, align = 'right')
df$MaxTempMean11 <- dplyr::lag(df$leadMean11, n = 5)
#verify that MaxTempMean11 is accurately calculating the mean Max temp for the previous 11 days.
c(mean(df[6:16,7]), df[16,18]) #manually calculated mean matches MaxTempMean11
df$leadMax19 <- dplyr::lead(df$MaxTemp, n = 9)
df$leadMean19 <- zoo::rollmean(df$leadMax19, k=19, fill = NA, align = 'right')
df$MaxTempMean19 <- dplyr::lag(df$leadMean19, n = 9)
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the previous 19 days.
c(mean(df[10:28,7]), df[28,21]) #manually calculated mean should match MaxTempMean11
df$TotPrecip11 <- zoo::rollapply(df$Precip, width=11, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that TotPrecip11 is accurately calculating the summed precip for the previous 11 days.
c(sum(df[1:11,10], na.rm = TRUE), df[11,22]) #manually calculated sum should match TotPrecip11
df$TotPrecip19 <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that TotPrecip19 is accurately calculating the summed precip for the previous 19 days.
c(sum(df[11:29,10], na.rm = TRUE), df[29,23]) #manually calculated sum should match TotPrecip19
df$TotHDD11 <- zoo::rollapply(df$HDD, width=11, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
View(df)
#verify that TotHDD11 is accurately calculating the summed HDD for the previous 11 days.
c(sum(df[11:29,13], na.rm = TRUE), df[29,24]) #manually calculated sum should match TotHDD11
#verify that TotHDD11 is accurately calculating the summed HDD for the previous 11 days.
c(sum(df[1:11,13], na.rm = TRUE), df[11,24]) #manually calculated sum should match TotHDD11
#verify that TotHDD11 is accurately calculating the summed HDD for the previous 11 days.
c(sum(df[11:21,13], na.rm = TRUE), df[21,24]) #manually calculated sum should match TotHDD11
#verify that TotHDD11 is accurately calculating the summed HDD for the previous 11 days.
c(sum(df[111:121,13], na.rm = TRUE), df[121,24]) #manually calculated sum should match TotHDD11
df$TotHDD19 <- zoo::rollapply(df$HDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that TotHDD19 is accurately calculating the summed HDD for the previous 19 days.
c(sum(df[111:129,13], na.rm = TRUE), df[129,25]) #manually calculated sum should match TotHDD19
#New dataframe with the derived climate metrics
climMetrics.df <- as.data.frame(df[,c(1:6, 18, 21:25)])
View(climMetrics.df)
#New dataframe with the derived climate metrics
climMetrics.df <- as.data.frame(df[60:11514,c(1:6, 18, 21:25)])
View(climMetrics.df)
?write.csv()
?write.csv()
write.csv(climMetrics.df, "C:\Users\Justin Mann\Documents\RProjects\CrowBase\ClimateMetrics.csv",
write.csv(climMetrics.df, "C:\Users\Justin\Documents\RProjects\CrowBase\ClimateMetrics.csv",
write.csv(climMetrics.df, "C:\\Users\\Justin Mann\\Documents\\RProjects\\CrowBase\\ClimateMetrics.csv",
row.names = FALSE)
install.packages("bayesdfa")
library(bayesdfa)
df <- read.csv("ClimateMetrics.csv", h=TRUE)
set.seed(42)
s <- sim_dfa(num_trends = 1, num_years = 20, num_ts = 3)
# only 1 chain and 250 iterations used so example runs quickly:
m <- fit_dfa(y = s$y_sim, iter = 50, chains = 1)
## Not run:
# example of observation error covariates
set.seed(42)
obs_covar <- expand.grid("time" = 1:20, "timeseries" = 1:3, "covariate" = 1)
obs_covar$value <- rnorm(nrow(obs_covar), 0, 0.1)
m <- fit_dfa(y = s$y_sim, iter = 50, chains = 1, obs_covar = obs_covar)
# example of process error covariates
pro_covar <- expand.grid("time" = 1:20, "trend" = 1:2, "covariate" = 1)
pro_covar$value <- rnorm(nrow(pro_covar), 0, 0.1)
m <- fit_dfa(y = s$y_sim, iter = 50, chains = 1, num_trends = 2, pro_covar = pro_covar)
# example of long format data
s <- sim_dfa(num_trends = 1, num_years = 20, num_ts = 3)
obs <- c(s$y_sim[1, ], s$y_sim[2, ], s$y_sim[3, ])
long <- data.frame("obs" = obs, "ts" = sort(rep(1:3, 20)), "time" = rep(1:20, 3))
m <- fit_dfa(y = long, data_shape = "long", iter = 50, chains = 1)
# example of long format data with obs covariates
s <- sim_dfa(num_trends = 1, num_years = 20, num_ts = 3)
obs <- c(s$y_sim[1, ], s$y_sim[2, ], s$y_sim[3, ])
long <- data.frame("obs" = obs, "ts" = sort(rep(1:3, 20)), "time" = rep(1:20, 3))
obs_covar <- expand.grid("time" = 1:20, "timeseries" = 1:3, "covariate" = 1:2)
obs_covar$value <- rnorm(nrow(obs_covar), 0, 0.1)
m <- fit_dfa(y = long, data_shape = "long", iter = 50, chains = 1, obs_covar = obs_covar)
# example of model with Z constrained to be proportions and wide format data
s <- sim_dfa(num_trends = 1, num_years = 20, num_ts = 3)
m <- fit_dfa(y = s$y_sim, z_model = "proportion", iter = 50, chains = 1)
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
View(df)
#create columns to contain
df$leadMax11 <- dplyr::lead(df$MaxTemp, n = 5)
df$leadMean11 <- zoo::rollmean(df$leadMax11, k=11, fill = NA, align = 'right')
df$MaxTempMean11 <- dplyr::lag(df$leadMean11, n = 5)
#verify that MaxTempMean11 is accurately calculating the mean Max temp for the previous 11 days.
c(mean(df[6:16,7]), df[16,18]) #manually calculated mean matches MaxTempMean11
df$leadMax19 <- dplyr::lead(df$MaxTemp, n = 9)
df$leadMean19 <- zoo::rollmean(df$leadMax19, k=19, fill = NA, align = 'right')
df$MaxTempMean19 <- dplyr::lag(df$leadMean19, n = 9)
#verify that MaxTempMean19 is accurately calculating the mean Max temp for the previous 19 days.
c(mean(df[10:28,7]), df[28,21]) #manually calculated mean should match MaxTempMean11
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
View(df)
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#verify that MaxTempMean11 is accurately calculating the mean Max temp for the previous 11 days.
c(mean(df[1:11,7]), df[1,16]) #manually calculated mean matches MaxTempMean11
df$leadMax12_23 <- dplyr::lead(df$MaxTemp, n = 5)
df$leadMax12_23 <- dplyr::lead(df$MaxTemp, n = 11)
df$MaxTempMean12_23 <- zoo::rollapply(df$leadMax12_23, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check: Is MaxTempMean12_23 calculating the mean Max temp for the following 11 days.
c(mean(df[12:23,7]), df[1,18]) #manually calculated mean matches MaxTempMean12_23
#Code check: Is MaxTempMean12_23 calculating the mean Max temp for the following 11 days.
c(mean(df[12:22,7]), df[1,18]) #manually calculated mean matches MaxTempMean12_23
#Create MaxTemp column that is 22 days ahead
df$leadMax23_33 <- dplyr::lead(df$MaxTemp, n = 22)
df$MaxTempMean23_33 <- zoo::rollapply(df$leadMax23_33, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check: Is MaxTempMean12_23 calculating the mean Max temp for the following 11 days.
c(mean(df[13:33,7]), df[1,20]) #manually calculated mean matches MaxTempMean12_23
#Code check: Is MaxTempMean12_23 calculating the mean Max temp for the following 11 days.
c(mean(df[23:33,7]), df[1,20]) #manually calculated mean matches MaxTempMean12_23
#Create MaxTemp column that is 33 days ahead
df$leadMax33_43 <- dplyr::lead(df$MaxTemp, n = 33)
df$MaxTempMean33_43 <- zoo::rollapply(df$leadMax33_43, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check: Is MaxTempMean33_43 calculating the mean Max temp for the fourth window of 11 days.
c(mean(df[33:43,7]), df[1,22]) #manually calculated mean matches MaxTempMean33_43
#Code check: Is MaxTempMean33_43 calculating the mean Max temp for the fourth window of 11 days.
c(mean(df[34:43,7]), df[1,22]) #manually calculated mean matches MaxTempMean33_43
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
View(df)
#create columns to contain mean MaxTemp for 11 day rolling windows for each julian day
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check: Is MaxTempMean1_11 calculating the mean Max temp for the following 11 days.
c(mean(df[1:11,7]), df[1,16]) #manually calculated mean matches MaxTempMean1_11
#Create MaxTemp column that is 11 days ahead
df$MaxTempMean12_22 <- dplyr::lead(df$MaxTempMean1_11, n = 11)
#Code check: Is MaxTempMean12_22 calculating the mean Max temp for the second window of 11 days.
c(mean(df[12:22,7]), df[1,17]) #manually calculated mean matches MaxTempMean12_22
#Create MaxTemp column that is 22 days ahead
df$MaxTempMean23_33 <- dplyr::lead(df$MaxTempMean12_22, n = 11)
#Code check: Is MaxTempMean23_33 calculating the mean Max temp for the third window of 11 days.
c(mean(df[23:33,7]), df[1,20]) #manually calculated mean matches MaxTempMean23_33
#Code check: Is MaxTempMean23_33 calculating the mean Max temp for the third window of 11 days.
c(mean(df[23:33,7]), df[1,18]) #manually calculated mean matches MaxTempMean23_33
#Create MaxTemp column that is 33 days ahead
df$leadMax34_44 <- dplyr::lead(df$MaxTempMean23_33, n = 11)
#Code check: Is MaxTempMean33_43 calculating the mean Max temp for the fourth window of 11 days.
c(mean(df[33:43,7]), df[1,19]) #manually calculated mean matches MaxTempMean33_43
#Code check: Is MaxTempMean33_43 calculating the mean Max temp for the fourth window of 11 days.
c(mean(df[34:44,7]), df[1,19]) #manually calculated mean matches MaxTempMean33_43
library(tidyverse)
library(dplyr)
library(zoo)
df <- read.csv("IthacaWeatherData1990_2020.csv", h=TRUE)
#coerce climate variables to class numeric
df$MaxTemp <- as.numeric(df$MaxTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
df$CDD <- as.numeric(df$CDD)
df$GDD <- as.numeric(df$GDD)
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean(df[1:11,7]), df[1,16]) #mean() calculation should match MaxTempMean1_11
#zoo::rollapply(): align = 'left' applies to the succeeding days, while align = 'right' applies to the preceding days
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean(df[1:11,7]), df[1,16]) #mean() calculation should match MaxTempMean1_11
View(df)
#Code check
df[1:11,7]
c(mean(df[1:11,7]), df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
c(df[1:11,7], mean(df[1:11,7]),df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(values=df[1:11,7], means=mean(df[1:11,7]),df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(values=df[1:11,7])means=mean(df[1:11,7]),df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(tibble(values=df[1:11,7]), means=mean(df[1:11,7]),df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(tibble(values=df[1:11,7]))
tibble(means=mean(df[1:11,7]),df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(tibble(values=df[1:11,7]))
tibble(mean=mean(df[1:11,7]),metric=df[1,16]) #mean() calculation should match MaxTempMean1_11
#Code check
print(tibble(values=df[1:11,7]))
print(tibble(mean=mean(df[1:11,7]),metric=df[1,16])) #mean() calculation should match MaxTempMean1_11
#Code check
tibble(list(tibble(values=df[1:11,7]),tibble(mean=mean(df[1:11,7]),metric=df[1,16])))
#Code check
knitr::kable(list(tibble(values=df[1:11,7]),tibble(mean=mean(df[1:11,7]),metric=df[1,16])))
#zoo::rollapply(): align = 'left' applies to the succeeding days, while align = 'right' applies to the preceding days
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
knitr::kable(list(tibble(mean=mean(df[1:11,7]),metric=df[1,16]),tibble(values=df[1:11,7])))
print() #mean() calculation should match MaxTempMean1_11
#Code check
knitr::kable(list(tibble(mean=mean(df[1:11,7]),
metric=df[1,16]),
tibble(values=df[1:11,7])))
#Code check
knitr::kable(list(tibble(mean=mean(df[1:11,7]),
metric=df[1,16]),
list(df[1:11,7])))
#zoo::rollapply(): align = 'left' applies to the succeeding days, while align = 'right' applies to the preceding days
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
knitr::kable(list(tibble(mean=mean(df[1:11,7]),
metric=df[1,16]),
tibble(values=df[1:11,7])))
#mean() calculation should match metric
print(df[12:22,7]))
print(df[12:22,7])
#MaxTempMean for days 12-22
df$MaxTempMean12_22 <- dplyr::lead(df$MaxTempMean1_11, n = 11)
#Code check
c(mean(df[12:22,7]), df[1,17]) #mean() calculation should match MaxTempMean12_22
#Code check
tibble(mean=mean(df[12:22,7]), metric=df[1,17]) #mean() calculation should match Metric
#Code check
print(mean=mean(df[12:22,7]), metric=df[1,17]) #mean() calculation should match Metric
#Code check
tibble(mean=mean(df[12:22,7]), metric=df[1,17]) #mean() calculation should match Metric
#Code check
c(mean=mean(df[12:22,7]), metric=df[1,17]) #mean() calculation should match Metric
c(df[12:22,7])#
c(values =df[12:22,7])#
c(value =df[12:22,7])#
print(df[12:22,7])#
#zoo::rollapply(): align = 'left' applies to the succeeding days, while align = 'right' applies to the preceding days
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTemp, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:11,7]),metric=df[1,16]),
#Code check
c(mean=mean(df[1:11,7]),metric=df[1,16])
print(values=df[1:11,7])
print(df[1:11,7])
#MaxTempMean for days 12-22
df$MaxTempMean12_22 <- dplyr::lead(df$MaxTempMean1_11, n = 11)
#Code check
c(mean=mean(df[12:22,7]), metric=df[1,17]) #mean() calculation should match metric
print(df[12:22,7])#
#MaxTempMean for days 23-33
df$MaxTempMean23_33 <- dplyr::lead(df$MaxTempMean12_22, n = 11)
#Code check
c(mean=mean(df[23:33,7]), metric=df[1,18])#mean() calculation should match metric
#MaxTempMean for days 23-33
df$MaxTempMean23_33 <- dplyr::lead(df$MaxTempMean12_22, n = 11)
#Code check
c(mean=mean(df[23:33,7]), metric=df[1,18])#mean() calculation should match metric
print(df[23:33,7])#11 values
print(df[34:44,7])
#MaxTempMean for days 34-44
df$leadMax34_44 <- dplyr::lead(df$MaxTempMean23_33, n = 11)
#Code check
c(mean=mean(df[34:44,7]), metric=df[1,19])#mean() calculation should match metric
print(df[34:44,7])#11 values
print(df[1:19,7])
#MaxTemp mean for 19 days prior to hatch date
df$MeanMaxTempIncubation <- zoo::rollapply(df$MaxTemp, width=19, FUN=mean, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:19,7]), metric=df[19,20]) #mean() calculation should match metric
df$PrecipSum1_11 <- zoo::rollapply(df$Precip, width=11, FUN=sum, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[1:11,10], na.rm = TRUE), metric=df[1,21]) #sum() calculation should match metric
print(df[1:11,10])#11 values)
#PrecipSum column that is 11 days ahead
df$PrecipSum12_22 <- dplyr::lead(df$PrecipSum1_11, n = 11)
#Code check
c(sum(df[12:22,10], na.rm = TRUE), df[1,22]) #sum() calculation should match PrecipSum12_22
#PrecipSum column that is 11 days ahead
df$PrecipSum12_22 <- dplyr::lead(df$PrecipSum1_11, n = 11)
#Code check
c(sum(sum=df[12:22,10], na.rm = TRUE), metric=df[1,22]) #sum() calculation should match metric
#PrecipSum column that is 11 days ahead
df$PrecipSum12_22 <- dplyr::lead(df$PrecipSum1_11, n = 11)
#Code check
c(sum=sum(df[12:22,10], na.rm = TRUE), metric=df[1,22]) #sum() calculation should match metric
print(df[12:22,10])
#PrecipSum column that is 22 days ahead
df$PrecipSum23_33 <- dplyr::lead(df$PrecipSum12_22, n = 11)
#Code check
c(sum=sum(df[23:33,10], na.rm = TRUE), metric=df[1,23]) #sum() calculation should match metric
print(df[23:33,10])#11 values
#Code check
c(sum=sum(df[34:44,10]), metric=df[1,24]) #sum() calculation should match metric
print(df[34:44,10])
print(df[11:29,10])#19 values
#Code check
c(sum=sum(df[11:29,10], na.rm = TRUE), metric=df[29,25]) #sum() calculation should match metric
#PrecipSum column that is 33 days ahead
df$PrecipSum34_44 <- dplyr::lead(df$PrecipSum23_33, n = 11)
#Code check
c(sum=sum(df[34:44,10]), metric=df[1,24]) #sum() calculation should match metric
#PrecipSum column that looks back 19 days from hatch date
df$PrecipSumIncubation <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[11:29,10], na.rm = TRUE), metric=df[29,24]) #sum() calculation should match metric
#PrecipSum column that looks back 19 days from hatch date
df$PrecipSumIncubation <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[11:29,10], na.rm = TRUE), metric=df[29,25]) #sum() calculation should match metric
print(df[11:29,10])#19 values
View(df)
#PrecipSum column that looks back 19 days from hatch date
df$PrecipSumIncubation <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[1:11,15], na.rm = TRUE), metric=df[1,26]) #sum() calculation should match metric
df$GDDSum1_11 <- zoo::rollapply(df$GDD, width=11, FUN=sum, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[11:29,10], na.rm = TRUE), metric=df[29,25]) #sum() calculation should match metric
#PrecipSum column that looks back 19 days from hatch date
df$PrecipSumIncubation <- zoo::rollapply(df$Precip, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[1:11,10], na.rm = TRUE), metric=df[1,25]) #sum() calculation should match metric
#Code check
c(sum=sum(df[1:19,10], na.rm = TRUE), metric=df[19,25]) #sum() calculation should match metric
print(df[1:19,10])#19 values
#Code check
c(sum=sum(df[1:19,15], na.rm = TRUE), metric=df[19,25]) #sum() calculation should match metric
#Code check
c(sum=sum(df[1:19,15], na.rm = TRUE), metric=df[19,26]) #sum() calculation should match metric
#Code check
c(sum=sum(df[1:19,15], na.rm = TRUE), metric=df[1,26]) #sum() calculation should match metric
#Code check
c(sum=sum(df[1:11,15], na.rm = TRUE), metric=df[1,26]) #sum() calculation should match metric
#Code check
c(sum=sum(df[12:22,15], na.rm = TRUE), metric=df[12,26]) #sum() calculation should match metric
#Code check
c(sum=sum(df[112:122,15], na.rm = TRUE), metric=df[122,26]) #sum() calculation should match metric
#Code check
c(sum=sum(df[112:122,15], na.rm = TRUE), metric=df[112,26]) #sum() calculation should match metric
print(df[112:122,15])
#GDDSum column that is 11 days ahead
df$GDDSum12_22 <- dplyr::lead(df$GDDSum1_11, n = 11)
#Code check
c(sum=sum(df[12:22,15], na.rm = TRUE), metric=df[1,27]) #sum() calculation should match metric
print(df[12:22,10])
print(df[12:22,15])
#Code check
c(sum=sum(df[14:24,15], na.rm = TRUE), metric=df[3,27]) #sum() calculation should match metric
print(df[14:24,15])
#Code check
c(sum=sum(df[12:22,15], na.rm = TRUE), metric=df[1,27]) #sum() calculation should match metric
#GDDSum column that is 11 days ahead
df$GDDSum12_22 <- dplyr::lead(df$GDDSum1_11, n = 11)
#Code check
c(sum=sum(df[66:77,15], na.rm = TRUE), metric=df[55,27]) #sum() calculation should match metric
#Code check
c(sum=sum(df[66:76,15], na.rm = TRUE), metric=df[55,27]) #sum() calculation should match metric
print(df[66:76,15])
#GDDSum column that is 22 days ahead
df$GDDSum23_33 <- dplyr::lead(df$GDDSum12_22, n = 11)
#Code check
c(sum=sum(df[66:76,15], na.rm = TRUE), metric=df[44,28]) #sum() calculation should match metric
#GDDSum column that is 22 days ahead
df$GDDSum23_33 <- dplyr::lead(df$GDDSum12_22, n = 11)
#Code check
c(sum=sum(df[66:76,15], na.rm = TRUE), metric=df[44,28]) #sum() calculation should match metric
#GDDSum column that is 33 days ahead
df$GDDSum34_44 <- dplyr::lead(df$GDDSum23_33, n = 11)
#Code check
c(sum=sum(df[66:76,15], na.rm = TRUE), metric=df[33,29]) #sum() calculation should match metric
#GDDSum for the 19 days preceding hatch date
df$GDDSumIncubation <- zoo::rollapply(df$HDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#GDDSum for the 19 days preceding hatch date
df$GDDSumIncubation <- zoo::rollapply(df$GDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#GDDSum for the 19 days preceding hatch date
df$GDDSumIncubation <- zoo::rollapply(df$GDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
```{r}
#code check
c(sum=sum(df[111:129,15], na.rm = TRUE), metric=df[129,30]) #sum() should match metric
print(df[111:129,15])
#GDDSum for the 19 days preceding hatch date
df$GDDSumIncubation <- zoo::rollapply(df$GDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#code check
c(sum=sum(df[111:129,15], na.rm = TRUE), metric=df[129,30]) #sum() should match metric
print(df[111:129,15])#19 values
#CDDSum column the first 11 days
df$CDDSum1_11 <- zoo::rollapply(df$CDD, width=11, FUN=sum, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[112:122,14], na.rm = TRUE), metric=df[112,31]) #sum() calculation should match metric
print(df[112:122,14])#11 values
#CDDSum column that is 11 days ahead
df$CDDSum12_22 <- dplyr::lead(df$CDDSum1_11, n = 11)
#Code check
c(sum=sum(df[66:76,14], na.rm = TRUE), metric=df[55,32]) #sum() calculation should match metric
#Code check
c(sum=sum(df[66:76,14], na.rm = TRUE), metric=df[55,32]) #sum() calculation should match metric
```{r}
print(df[66:76,14])
#CDDSum column that is 22 days ahead
df$CDDSum23_33 <- dplyr::lead(df$CDDSum12_22, n = 11)
#Code check
c(sum=sum(df[66:76,14], na.rm = TRUE), metric=df[44,33]) #sum() calculation should match metric
#CDDSum column that is 33 days ahead
df$CDDSum34_44 <- dplyr::lead(df$CDDSum23_33, n = 11)
#Code check
c(sum=sum(df[66:76,14], na.rm = TRUE), metric=df[33,34]) #sum() should match metric
#CDDSum for the 19 days preceding hatch date
df$CDDSumIncubation <- zoo::rollapply(df$CDD, width=19, FUN=sum, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#code check
c(sum=sum(df[111:129,14], na.rm = TRUE), metric=df[129,35]) #sum() should match metric
print(df[111:129,14])#19 values
print(df[111:129,14])#19 values
View(df)
#New dataframe with the derived climate metrics
ClimateMetrics.df <- as.data.frame(df[60:11514,c(1:7,10,14-35)])
#New dataframe with the derived climate metrics
ClimateMetrics.df <- as.data.frame(df[60:11514,c(1:7,10,14:35)])
View(ClimateMetrics.df)
write.csv(ClimateMetrics.df, "C:\\Users\\Justin Mann\\Documents\\RProjects\\CrowBase\\ClimateMetrics.csv",
row.names = FALSE)
