ci <- as_tibble(confint(mdl))
mdl.df$ci.lower <- ci$`2.5 %`
mdl.df$ci.upper <- ci$`97.5 %`
mdl.df <- mdl.df[-1,]
ggplot(data = mdl.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper), size=1, shape=20)+
coord_flip()+
geom_hline(yintercept = 0, color="red",size=1)+
ggtitle("Parameter estimates")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 18),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 18),
axis.title.y = element_blank(),
plot.margin = margin(15,15,15,15))
}
mdl.tbl <- function(mdl){
mdl.df <- tidy(mdl, quick = FALSE)
ci <- as_tibble(confint(mdl))
mdl.df$ci.lower <- ci$`2.5 %`
mdl.df$ci.upper <- ci$`97.5 %`
mdl.df <- mdl.df[-1,]
print(mdl.df)
}
# addline_format <- function(x,...){
#   gsub('\\s','\n',x)
# }
#Both sexes
B.df <- read.csv("CrowNestlingClimate_BothSexesClean.csv",h=TRUE)
B.df$AllSex <- as.factor(B.df$AllSex)
summary(B.df)
B.factors.df <- B.df[,1:5]
B.scaled.df <- scale(B.df[,6:27])
B.scaled.df <- cbind(B.factors.df,B.scaled.df)
#Males
M.df <- subset(B.df, AllSex=="M")
M.scaled.df <- subset(B.scaled.df, AllSex=="M")
#Females
F.df <- subset(B.df, AllSex=="F")
F.scaled.df <- subset(B.scaled.df, AllSex=="F")
# Upper bill GDD model
F.UB2.mdl <- lm(UB ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.df)
summary(F.UB2.mdl)
# Precipitation has a negative effect, mainly when it's cold
F.scaled.UB2.mdl <- lm(UB ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.scaled.df)
summary(F.scaled.UB2.mdl)
F.UB.inter.plot <- plot_model(F.UB2.mdl, type = "int")
F.UB.inter.plot +
scale_fill_discrete()
vif(F.UB2.mdl)
vif(F.scaled.UB2.mdl)
F.UB.df <- tidy(F.scaled.UB2.mdl, quick = FALSE)
ci <- as_tibble(confint(F.scaled.UB2.mdl))
F.UB.df$ci.lower <- ci$`2.5 %`
F.UB.df$ci.upper <- ci$`97.5 %`
F.UB.df <- F.UB.df[-c(1,2,4),]
F.UB.df$Sex <- "F"
F.UB.df$Metric <- "Upper Bill"
# Bill nares to tip model
F.scaled.BNT2.mdl <- lm(BillNT ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.scaled.df)
summary(F.scaled.BNT2.mdl)
# Precipitation has a negative effect, mainly when it's cold
F.BNT.df <- tidy(F.scaled.BNT2.mdl, quick = FALSE)
ci <- as_tibble(confint(F.scaled.BNT2.mdl))
F.BNT.df$ci.lower <- ci$`2.5 %`
F.BNT.df$ci.upper <- ci$`97.5 %`
F.BNT.df <- F.BNT.df[5,]
F.BNT.df$Sex <- "F"
F.BNT.df$Metric <- "Bill nares to tip"
# Upper bill surface area model
F.scaled.UBS2.mdl <- lm(UBS ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.scaled.df)
summary(F.scaled.UBS2.mdl)
# Precipitation has a negative effect, mainly when it's cold
F.UBS.df <- tidy(F.scaled.UBS2.mdl, quick = FALSE)
ci <- as_tibble(confint(F.scaled.UBS2.mdl))
F.UBS.df$ci.lower <- ci$`2.5 %`
F.UBS.df$ci.upper <- ci$`97.5 %`
F.UBS.df <- F.UBS.df[c(2,3,5),]
F.UBS.df$Sex <- "F"
F.UBS.df$Metric <- "Upper Bill Surface Area"
# Bill depth model
F.scaled.BD2.mdl <- lm(BillDepth ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.scaled.df)
summary(F.scaled.BD2.mdl)
# Temperature is the only important climate variable
F.BD.df <- tidy(F.scaled.BD2.mdl, quick = FALSE)
ci <- as_tibble(confint(F.scaled.BD2.mdl))
F.BD.df$ci.lower <- ci$`2.5 %`
F.BD.df$ci.upper <- ci$`97.5 %`
F.BD.df <- F.BD.df[2,]
F.BD.df$Sex <- "F"
F.BD.df$Metric <- "Bill Depth"
# Tarsus GDD2 model
F.scaled.Tarsus2.mdl <- lm(Tarsus ~ GDDSum12_22*PrecipSum12_22 + Weight, data = F.scaled.df)
summary(F.scaled.Tarsus2.mdl)
# Climate variables have no effect
F.Tarsus.df <- tidy(F.scaled.Tarsus2.mdl, quick = FALSE)
ci <- as_tibble(confint(F.scaled.Tarsus2.mdl))
F.Tarsus.df$ci.lower <- ci$`2.5 %`
F.Tarsus.df$ci.upper <- ci$`97.5 %`
F.Tarsus.df <- F.Tarsus.df[c(2:4),]
F.Tarsus.df$Sex <- "F"
F.Tarsus.df$Metric <- "Tarsus"
# Upper bill model
M.scaled.UB2.mdl <- lm(UB ~ GDDSum12_22*PrecipSum12_22 + Weight, data = M.scaled.df)
summary(M.scaled.UB2.mdl)
# Weight is the only important predictor
M.UB.df <- tidy(M.scaled.UB2.mdl, quick = FALSE)
ci <- as_tibble(confint(M.scaled.UB2.mdl))
M.UB.df$ci.lower <- ci$`2.5 %`
M.UB.df$ci.upper <- ci$`97.5 %`
M.UB.df <- M.UB.df[3,]
M.UB.df$Sex <- "M"
M.UB.df$Metric <- "Upper Bill"
# Bill nares to tip model
M.scaled.BNT2.mdl <- lm(BillNT ~ GDDSum12_22*PrecipSum12_22 + Weight, data = M.scaled.df)
summary(M.scaled.BNT2.mdl)
# Weight is the only important predictor
M.BNT.df <- tidy(M.scaled.BNT2.mdl, quick = FALSE)
ci <- as_tibble(confint(M.scaled.BNT2.mdl))
M.BNT.df$ci.lower <- ci$`2.5 %`
M.BNT.df$ci.upper <- ci$`97.5 %`
M.BNT.df <- M.BNT.df[2,]
M.BNT.df$Sex <- "M"
M.BNT.df$Metric <- "Bill nares to tip"
# Upper bill surface area model
M.scaled.UBS2.mdl <- lm(UBS ~ GDDSum12_22*PrecipSum12_22 + Weight, data = M.scaled.df)
summary(M.scaled.UBS2.mdl)
M.UBS.df <- tidy(M.scaled.UBS2.mdl, quick = FALSE)
ci <- as_tibble(confint(M.scaled.UBS2.mdl))
M.UBS.df$ci.lower <- ci$`2.5 %`
M.UBS.df$ci.upper <- ci$`97.5 %`
M.UBS.df <- M.UBS.df[2,]
M.UBS.df$Sex <- "M"
M.UBS.df$Metric <- "Upper Bill Surface Area"
# Bill depth model
M.scaled.BD2.mdl <- lm(BillDepth ~ GDDSum12_22*PrecipSum12_22 + Weight, data = M.scaled.df)
summary(M.scaled.BD2.mdl)
# Temperature and the interaction between temp and precip are both important
M.BD.df <- tidy(M.scaled.BD2.mdl, quick = FALSE)
ci <- as_tibble(confint(M.scaled.BD2.mdl))
M.BD.df$ci.lower <- ci$`2.5 %`
M.BD.df$ci.upper <- ci$`97.5 %`
M.BD.df <- M.BD.df[c(2,5),]
M.BD.df$Sex <- "M"
M.BD.df$Metric <- "Bill Depth"
# Tarsus model
M.scaled.Tarsus2.mdl <- lm(Tarsus ~ GDDSum12_22*PrecipSum12_22 + Weight, data = M.scaled.df)
summary(M.scaled.Tarsus2.mdl)
# Climate variables have no effect
M.Tarsus.df <- tidy(M.scaled.Tarsus2.mdl, quick = FALSE)
ci <- as_tibble(confint(M.scaled.Tarsus2.mdl))
M.Tarsus.df$ci.lower <- ci$`2.5 %`
M.Tarsus.df$ci.upper <- ci$`97.5 %`
M.Tarsus.df <- M.Tarsus.df[c(2:4),]
M.Tarsus.df$Sex <- "M"
M.Tarsus.df$Metric <- "Tarsus"
B.scaled.UBS2.mdl <- lm(UBS ~ GDDSum12_22 + PrecipSum12_22*AllSex + Weight, data = B.scaled.df)
summary(B.scaled.UBS2.mdl)
PosterForestPlot.df <- rbind(F.Tarsus.df,M.Tarsus.df,F.BNT.df,M.BNT.df,F.UB.df,M.UB.df,F.BD.df,M.BD.df,F.UBS.df,M.UBS.df)
TarsusForestPlot.df <- subset(PosterForestPlot.df, Metric=="Tarsus")
BNTForestPlot.df <- subset(PosterForestPlot.df, Metric=="Bill nares to tip")
UBForestPlot.df <- subset(PosterForestPlot.df, Metric=="Upper Bill")
BDForestPlot.df <- subset(PosterForestPlot.df, Metric=="Bill Depth")
UBSForestPlot.df <- subset(PosterForestPlot.df, Metric=="Upper Bill Surface Area")
tarsus.fplot <- ggplot(data = TarsusForestPlot.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper, color=Sex),
position=position_dodge(width=0.3), shape=20, size=1.3)+
coord_flip()+
geom_hline(yintercept = 0, color="black",size=1, linetype="dotted")+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
scale_x_discrete(labels=c("GDD", "Precip", "Weight"))+
ylab("Parameter Estimate")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.title.y = element_blank(),
legend.position = "top",
plot.margin = margin(15,15,15,15))
tarsus.fplot
cowplot::save_plot("tarsus.fplot.png", tarsus.fplot, base_height = 4, base_width = 5)
BNT.fplot <- ggplot(data = BNTForestPlot.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper, color=Sex),
position=position_dodge(width=0.3), shape=20, size=1.3)+
coord_flip()+
geom_hline(yintercept = 0, color="black",size=1, linetype="dotted")+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
scale_x_discrete(labels=c("GDD", "GDD * Precip"))+
scale_y_continuous(limits = c(-.3,.3), breaks = seq(-.2,.2,.1))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.y = element_blank(),
legend.position = "none",
plot.margin = margin(15,15,15,15))
BNT.fplot
UB.fplot <- ggplot(data = UBForestPlot.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper, color=Sex),
position=position_dodge(width=0.3), shape=20, size=1.3)+
coord_flip()+
geom_hline(yintercept = 0, color="black",size=1, linetype="dotted")+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
scale_x_discrete(labels=c("GDD * Precip", "Precip"))+
scale_y_continuous(limits = c(-.3,.3), breaks = seq(-.2,.2,.1))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.y = element_blank(),
legend.position = "none",
plot.margin = margin(15,15,15,15))
UB.fplot
BD.fplot <- ggplot(data = BDForestPlot.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper, color=Sex),
position=position_dodge(width=0.3), shape=20, size=1.3)+
coord_flip()+
geom_hline(yintercept = 0, color="black",size=1, linetype="dotted")+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
scale_x_discrete(labels=c("GDD", "GDD * Precip"))+
scale_y_continuous(limits = c(-.3,.3), breaks = seq(-.2,.2,.1))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.y = element_blank(),
legend.position = "none",
plot.margin = margin(15,15,15,15))
BD.fplot
UBS.fplot <- ggplot(data = UBSForestPlot.df)+
geom_pointrange(aes(x=term, y=estimate, ymin=ci.lower, ymax=ci.upper, color=Sex),
position=position_dodge(width=0.3), shape=20, size=1.3)+
coord_flip()+
geom_hline(yintercept = 0, color="black",size=1, linetype="dotted")+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
scale_x_discrete(labels=c("GDD", "GDD * Precip", "Precip"))+
scale_y_continuous(limits = c(-.3,.3), breaks = seq(-.2,.2,.1))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.title.y = element_blank(),
legend.position = "none",
plot.margin = margin(15,15,15,15))
UBS.fplot
billMetrics.wrap <- ggarrange(BNT.fplot,UB.fplot,BD.fplot,UBS.fplot, ncol = 1, common.legend = TRUE)
annotate_figure(billMetrics.wrap, bottom = text_grob("Parameter Estimate", hjust = .1, size = 20))
cowplot::save_plot("billMetrics.wrap.png", billMetrics.wrap, base_height = 8, base_width = 5)
UBSByWeightGDD.plot <- ggplot(data = B.df, aes(x=GDDSum12_22, y=UBS/Weight, color=AllSex))+
geom_point(size = 1.2)+
geom_smooth()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
labs(color = "Sex")+
ylab("UBS/Weight Ratio")+
xlab("GDD")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
UBSByWeightGDD.plot
cowplot::save_plot("UBSByWeightGDD.plot.png", UBSByWeightGDD.plot)
# Create USB Weight Ratio
B.df$USBbyWeight <- B.df$UBS/B.df$Weight
t.test(B.df$USBbyWeight[B.df$AllSex=="M"], B.df$USBbyWeight[B.df$AllSex=="F"])
F.UB.inter.plot <- F.UB.inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("Low", "High"))+
ylab("Upper Bill")+
xlab("GDD")+
theme(plot.title = element_blank(),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
F.UB.inter.plot
cowplot::save_plot("F.UB.inter.plot.png", F.UB.inter.plot)
summary(F.scaled.UB2.mdl)
F.UB.inter.plot +
scale_fill_discrete()
JulianGDD.plot <- ggplot(data = B.df, aes(x=HatchDateJulYear, y=GDDSum12_22, color=AllSex, label=ID))+
geom_point(size = 1.2)+
geom_smooth()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
labs(color = "Sex")+
ylab("Weight")+
xlab("GDD")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplotly(WeightGDD.plot)
JulianGDD.plot <- ggplot(data = B.df, aes(x=HatchDateJulYear, y=GDDSum12_22, color=AllSex, label=ID))+
geom_point(size = 1.2)+
geom_smooth()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
labs(color = "Sex")+
ylab("GDD")+
xlab("Hatch Date")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplotly(JulianGDD.plot)
#cowplot::save_plot("WeightGDD.plot.png", WeightGDD.plot)
BDGDD.plot <- ggplot(data = B.df, aes(x=GDDSum12_22, y=BillDepth, color=AllSex))+
geom_boxplot()+
#geom_smooth()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
labs(color = "Sex")+
ylab("Bill Depth")+
xlab("GDD")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
BDGDD.plot
BDGDD.plot <- ggplot(data = B.df, aes(x=GDDSum12_22, y=BillDepth, color=AllSex))+
geom_boxplot()+
#geom_smooth()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
labs(color = "Sex")+
ylab("Bill Depth")+
xlab("")+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
BDGDD.plot
#cowplot::save_plot("UBSByWeightGDD.plot.png", UBSByWeightGDD.plot)
t.test(B.df$BillDepth[B.df$AllSex=="M"], B.df$BillDepth[B.df$AllSex=="F"])
lm(data = B.df, BillDepth~Weight + AllSex + CalcAge)
summary(lm(data = B.df, BillDepth~Weight + AllSex + CalcAge))
summary(lm(data = B.scale.df, BillDepth~Weight + AllSex + CalcAge))
summary(lm(data = B.scaled.df, BillDepth~Weight + AllSex + CalcAge))
BD.mdl <-summary(lm(data = B.scaled.df, BillDepth~Weight + AllSex + CalcAge))
B.scaled.df$BDResids <- BD.mdl$residuals
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
B.scaled.df$BDResids
hist(B.scaled.df$BDResids)
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
B.scaled.df$BDResids
hist(B.scaled.df$BDResids)
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
mean(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"])
hist(B.scaled.df$BDResids)
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
mean(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"])
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
hist(B.scaled.df$BDResids)
t.test(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"],B.scaled.df$BDResids[B.scaled.df$AllSex=="F"])
hist(B.scaled.df$BDResids)
range(B.scaled.df$BDResids[B.scaled.df$AllSex=="M"])
ggplot(data = B.scaled.df, aes(x=BDResids,fill=AllSex))+
geom_histogram()
ggplot(data = B.scaled.df, aes(x=BDResids,fill=AllSex))+
geom_histogram()+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=BDResids,fill=AllSex))+
geom_histogram()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=BDResids,fill=AllSex))+
geom_histogram()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
Tarsus.mdl <-summary(lm(data = B.scaled.df, Tarsus~Weight + AllSex + CalcAge))
B.scaled.df$TarsusResids <- Tarsus.mdl$residuals
t.test(B.scaled.df$TarsusResids[B.scaled.df$AllSex=="M"],B.scaled.df$TarsusResids[B.scaled.df$AllSex=="F"])
ggplot(data = B.scaled.df, aes(x=TarsusResids,fill=AllSex))+
geom_histogram()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
View(B.df)
library(tidyverse)
library(dplyr)
library(asnipe)
#converts our data in 'asnipe' format data
group_maker <- function(x){
g1 <- ids$id1[obs[,x]> 0]
g2 <- ids$id2[obs[,x]> 0]
temp <- c(g1,g2)
temp <- temp[!duplicated(temp)]
paste(temp)
}
#Read in our data data
df <- read.csv("GlobalFicrSocNet.csv", sep = ",", header=TRUE, check.names = F)
#Replace NAs with 0
df[is.na(df)] <- 0
df <- read.csv("IthacaWeatherData1989-2020.csv", h=TRUE)
library(tidyverse)
library(tidyverse)
library(dplyr)
library(zoo)
View(df)
df <- read.csv("IthacaWeatherData1989-2020.csv", h=TRUE)
df <- df %>%
rename(MaxTemp=MaxTemperature,MinTemp=MinTemperature,Precip=Precipitation)
select(Date,HatchDateJulYear,MaxTemp,MinTemp,Precip,HDD,CDD,GDD)
df <- df %>%
rename(MaxTemp=MaxTemperature,MinTemp=MinTemperature,Precip=Precipitation),
df <- df %>%
rename(MaxTemp=MaxTemperature,MinTemp=MinTemperature,Precip=Precipitation) %>%
select(Date,HatchDateJulYear,MaxTemp,MinTemp,Precip,HDD,CDD,GDD)
df <- read.csv("IthacaWeatherData1989-2020.csv", h=TRUE)
df <- df %>%
rename(MaxTemp=MaxTemperature,MinTemp=MinTemperature,Precip=Precipitation) %>%
select(Date,HatchDateJulYear,MaxTemp,MinTemp,Precip,HDD,CDD,GDD)
#coerce climate variables to class numeric, NAs introduced where missing data were coded as characters
df$MaxTemp <- as.numeric(df$MaxTemp)
df$MinTemp <- as.numeric(df$MinTemp)
df$Precip <- as.numeric(df$Precip)
df$HDD <- as.numeric(df$HDD)
df$CDD <- as.numeric(df$CDD)
df$GDD <- as.numeric(df$GDD)
f2c <- function(x){
x <- (5/9) * (x-32)
return(x)
}
f2c(42)#first MaxTemp = 5.555C
df$MaxTempC <- mapply(f2c, df$MaxTemp)
df$MinTempC <- mapply(f2c, df$MinTemp)
in2cm <- function(x){
x <- x * 2.54
return(x)
}
in2cm(0.07)#first precip amount = 0.1778 cm
df$PrecipCM <- mapply(in2cm, df$Precip)
df <- df %>%
select(Date,HatchDateJulYear,MaxTempC,MinTempC,
PrecipCM,HDD,CDD,GDD)
#zoo::rollapply(): align = 'left' applies to the succeeding days, while align = 'right' applies to the preceding days
?zoo::rollapply()
#An 11-day rolling window calculates the mean of MaxTemp for the next 11 days
df$MaxTempMean1_11 <- zoo::rollapply(df$MaxTempC, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:11,7]),metric=df[1,16])
#Code check
c(mean=mean(df[1:11,7]),metric=df[1,16])
View(df)
View(df)
#Code check
c(mean=mean(df[1:11,3]),metric=df[1,9])
#MaxTempMean for days 12-22
df$MaxTempMean12_22 <- dplyr::lead(df$MaxTempMean1_11, n = 11)
#Code check
c(mean=mean(df[12:22,3]), metric=df[1,10])#mean() calculation should match metric
print(df[12:22,7])#11 values
print(df[12:22,3])#11 values
#MaxTemp mean for 19 days prior to hatch date
df$MeanMaxTempIncubation <- zoo::rollapply(df$MaxTempC, width=19, FUN=mean, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:19,3]), metric=df[19,11]) #mean() calculation should match metric
print(df[1:19,3])#19 values
#An 11-day rolling window calculates the mean of MinTemp for the next 11 days
df$MinTempMean1_11 <- zoo::rollapply(df$MinTempC, width=11, FUN=mean, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:11,4]),metric=df[1,12])
#MaxTempMean for days 12-22
df$MinTempMean12_22 <- dplyr::lead(df$MinTempMean1_11, n = 11)
#Code check
c(mean=mean(df[12:22,4]), metric=df[1,13])#mean() calculation should match metric
#MaxTemp mean for 19 days prior to hatch date
df$MeanMinTempIncubation <- zoo::rollapply(df$MinTempC, width=19, FUN=mean, align = 'right', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(mean=mean(df[1:19,4]), metric=df[19,14]) #mean() calculation should match metric
df$PrecipSum1_11 <- zoo::rollapply(df$PrecipCM, width=11, FUN=sum, align = 'left', fill = NA, partial = TRUE, na.rm = TRUE)
#Code check
c(sum=sum(df[1:11,5], na.rm = TRUE), metric=df[1,15]) #sum() calculation should match metric
#PrecipSum column that is 11 days ahead
df$PrecipSum12_22 <- dplyr::lead(df$PrecipSum1_11, n = 11)
#Code check
c(sum=sum(df[12:22,5], na.rm = TRUE), metric=df[1,16]) #sum() calculation should match metric
