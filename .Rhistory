<<<<<<< HEAD
scaled.df <- cbind(DataNotScaled.df,scale.df)
BDTime1.bmdl <- stan_glm( BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDTime1.bmdl), digits = 3)
plot(BDTime1.bmdl, pars = c("GDDSum1_11","PrecipSum1_11","Weight","CalcAge","GDDSum1_11:PrecipSum1_11"))
plot(BDTime1.bmdl, pars = c("GDDSum1_11","PrecipSum1_11","Weight","CalcAge","GDDSum1_11:PrecipSum1_11"))
print(summary(BDTime1.bmdl), digits = 3)
plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDTime2.bmdl <- stan_glm( BD ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDTime2.bmdl <- stan_glm( BD ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDTime2.bmdl), digits = 3)
#launch_shinystan(BDTime1.bmdl)
print(summary(BDTime2.bmdl), digits = 3)
plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDIncub.bmdl <- stan_glm( BD ~ GDDSumIncubation * PrecipSumIncubation + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDIncub.bmdl), digits = 3)
plot(BDIncub.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
plot(BDIncub.bmdl, pars = c("GDDSumIncubation","PrecipSumIncubation","Weight","CalcAge","GDDSumIncubation:PrecipSumIncubation"))
TarsusTime2.scaled.mdl <- lm(data = scaled.df, Tarsus ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge)
summary(TarsusTime2.scaled.mdl)
TarsusIncub.scaled.mdl <- lm(data = scaled.df, Tarsus ~ GDDSumIncubation * PrecipSumIncubation + Weight + CalcAge)
summary(TarsusIncub.scaled.mdl)
BDGDDIncub.plot <- plot(BDIncub.bmdl, pars = c("GDDSumIncubation","PrecipSumIncubation","Weight","CalcAge","GDDSumIncubation:PrecipSumIncubation"))
library(ggeffects)
BDGDDTime2.plot <- plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDGDDTime1.plot <- plot(BDTime1.bmdl, pars = c("GDDSum1_11","PrecipSum1_11","Weight","CalcAge","GDDSum1_11:PrecipSum1_11"))
ggarrange(BDGDDIncub.plot,BDGDDTime1.plot,BDGDDTime2.plot, ncol = 1)
plot_model(BDIncub.bmdl)
plot_model(BDIncub.bmdl, type = "inter")
plot_model(BDIncub.bmdl, type = "int")
plot_model(BDTime2.bmdl, type = "int")
plot_model(BDIncub.bmdl, type = "int", mdrt.values = "quart")
plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
BDGDDTime2Inter.plot
BDGDDIncubInter.plot <- plot_model(BDIncub.bmdl, type = "int", mdrt.values = "quart")
BDGDDIncubInter.plot <- BDGDDIncubInter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
summary(TarsusResidual.scaled.mdl)
t.test(B.df$Tarsus[B.df$AllSex=="M"], B.df$Tarsus[B.df$AllSex=="F"])
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red")
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", type="dashed")
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed")
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=2)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="red", linetype="dashed", size=1)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)
?std()
sd(B.df$Tarsus[B.df$AllSex=="M"])
sd(B.df$Tarsus[B.df$AllSex=="F"])
sd(B.df$Tarsus[B.df$AllSex=="M"])
M.sd <- sd(B.df$Tarsus[B.df$AllSex=="M"])
F.sd <- sd(B.df$Tarsus[B.df$AllSex=="F"])
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus))+
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = "#009E73", labels = "Female")+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
#scale_fill_manual(values = "#009E73", labels = "Female")+
# geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
geom_histogram(colour = "black", bins = 100)#+
#scale_fill_manual(values = "#009E73", labels = "Female")+
# geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = "#009E73", labels = "Female")+
# geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
```
ggplot(data = F.df, aes(x=Tarsus, fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual("#009E73", labels = "Female")+
# geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
```
ggplot(data = F.df, aes(x=Tarsus))+
geom_histogram(colour = "black", bins = 100, colour = "#009E73")
ggplot(data = F.df, aes(x=Tarsus))+
geom_histogram(colour = "black", bins = 100)
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = F.df, aes(x=Tarsus))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 58.006 + F.sd, color="red", linetype="dashed", size=1)+
```
F.low <- F.sd * 2
ggplot(data = F.df, aes(x=Tarsus))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = F.low, color="red", linetype="dashed", size=1)+
```
ggplot(data = B.scaled.df, aes(x=TarsusScaledResids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
BDGDDIncubInter.plot
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Incubation")+
theme(plot.title = element_blank(),
=======
t.test(B.df$TarsusScaledResids[B.df$AllSex=="M"], B.df$TarsusScaledResids[B.df$AllSex=="F"])
B.df$TarsusScaledResids <- TarsusScaledSummary$residuals
ggplot(data = B.scaled.df, aes(x=TarsusScaledResids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
BDGDDTime2Inter.plot
BDGDDIncubInter.plot <- BDGDDIncubInter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Incubation")+
theme(plot.title = element_blank(),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
BDGDDIncubInter.plot <- plot_model(BDIncub.bmdl, type = "int", mdrt.values = "quart")
BDGDDIncubInter.plot <- BDGDDIncubInter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Incubation")+
theme(plot.title = element_blank(),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
?plot_model()
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Depth Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
BDGDDTime2Inter.plot
BDGDDTime2.plot <- plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDGDDTime2.plot
#variables that don't get scaled
DataNotScaled.df <- df[,1:11]
View(DataNotScaled.df)
View(df)
View(df)
df <- df %>% relocate(CalcAge, .after = AllSex)
View(df)
View(df)
View(df)
df <- df %>% relocate(c(CalcAge,FieldAge,HatchDateJul), .after = AllSex)
View(df)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scale.df <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scale.df <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(dataNotScaled.df,scale.df)
#scale continuous data
#?scale()
scale.df <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(dataNotScaled.df,scale.df)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scale.df)
#categorical data
unScaled.df <- df[,1:8]
View(unScaled.df)
View(BDGDDTime2.plot)
#continuous data
dataToScale.df <- df[,9:40]
View(dataToScale.df)
is.numeric(dataToScale.df)
is.numeric(dataToScale.df[,1])
is.numeric(dataToScale.df[,2])
is.numeric(dataToScale.df[,3])
is.numeric(dataToScale.df[,4])
is.numeric(dataToScale.df[,5])
is.numeric(dataToScale.df[,6])
is.numeric(dataToScale.df[,7])
#continuous data
dataToScale.df <- df[,9:40]
View(DataToScale.df)
#scale continuous data
#?scale()
scale.df <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#scale continuous data
#?scale()
scaled <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scale.df)
View(scaled.df)
BDTime1.scaled.mdl <- lm(data = scaled.df, BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge)
summary(BDTime1.scaled.mdl)
BDTime1.bmdl <- stan_glm( BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDTime1.bmdl), digits = 3)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scale.df)
summary(df)
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE, na.rm = FALSE)
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE, na.action(na.rm))
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE, na.action=na.fail)
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scale.df)
=======
t.test(B.df$TarsusScaledResids[B.df$AllSex=="M"], B.df$TarsusScaledResids[B.df$AllSex=="F"])
t.test(B.df$TarsusScaledResids[B.df$AllSex=="M"], B.df$TarsusScaledResids[B.df$AllSex=="F"])
#Scaled tarsus
TarsusResidual.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
summary(TarsusResidual.scaled.mdl)
#Scaled tarsus
TarsusNoSex.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
t.test(B.df$Tarsus[B.df$AllSex=="M"], B.df$Tarsus[B.df$AllSex=="F"])
#Scaled tarsus
TarsusNoSex.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
TarsusNoSex.resids <- summary(TarsusNoSex.scaled.mdl)$Residuals
B.df$TarsusScaledResids <- TarsusScaledSummary$residuals
View(B.df)
summary(TarsusNoSex.scaled.mdl)$Residuals
TarsusNoSex.summ <- summary(TarsusNoSex.scaled.mdl)
TarsusNoSex.summ <- summary(TarsusNoSex.scaled.mdl)
B.df$TarsusNoSex.resids <- TarsusNoSex.summ$residuals
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
library(tidyverse)
library(dplyr)
library(broom) #tidy() to create tibbles from model summaries
library(car) #vif
library(cowplot)
library(lme4) #frequentist models
library(sjPlot) #plot_model & tab_model (blue = #377EB8)
library(ggpubr) #ggarrange
library(glmmTMB) #zi & overdispersed models
library(lmerTest) #lmerTest::step
library(ggeffects) #ggpredict
#PACKAGES FOR BAYESIAN MODELS
library(rstanarm) #stan models
library(shinystan) #stan model evaluation
#launch_shinystan_demo()
library(loo) #use loo() to compare fits between bayesian models
library(ggeffects)
library(plotly)
library(MuMIn) #dredge() for unsupervised model selection
library(AICcmodavg) #aictab() for AICc model comparisons
library(DHARMa)
library(DescTools)
library(umap)
library(tsne)
theme_set(theme_classic())
df <- read.csv("CrowNestlingClimate_AllNestlingsCleaned&ClimateJoined.csv", h=TRUE)
df <- df[,-1]
#n=2035 nestlings, 39 variables
df$Decades <- cut(df$Year, breaks = c(1988,1999,2010,2018), labels = c("89-99","00-10","11-18"))
<<<<<<< HEAD
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:39]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
summary(df)
df %>% relocate(Decades, .before = Year)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
View(df)
df %>% relocate(Decades, .before = Year)
#categorical data
unScaled.df <- df[,1:8]
#continuous data
dataToScale.df <- df[,9:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
df %>% relocate(Decades, .before = Year)
df <- df %>% relocate(Decades, .before = Year)
View(df)
#categorical data
unScaled.df <- df[,1:11]
View(unScaled.df)
View(dataToScale.df)
#continuous data
dataToScale.df <- df[,12:40]
View(dataToScale.df)
=======
df <- df %>% relocate(Decades, .before = Year)
#categorical data
unScaled.df <- df[,1:11]
#continuous data
dataToScale.df <- df[,12:40]
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
<<<<<<< HEAD
scaled.df <- cbind(unScaled.df,scale.df)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scale.mat)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scaled.mat)
summary(df)
summary(scaled.df)
TarsusIncub.bmdl <- stan_glm(Tarsus ~ GDDSumIncubation * PrecipSumIncubation + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(TarsusIncub.bmdl), digits = 3)
#launch_shinystan(TarsusIncub.bmdl)
TarsusGDDIncub.plot <- plot(TarsusIncub.bmdl, pars = c("GDDSumIncubation","PrecipSumIncubation","Weight","CalcAge","GDDSumIncubation:PrecipSumIncubation"))
TarsusTime1.bmdl <- stan_glm(Tarsus ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(TarsusTime1.bmdl), digits = 3)
TarsusGDDTime1.plot <- plot(TarsusTime1.bmdl, pars = c("GDDSum1_11","PrecipSum1_11","Weight","CalcAge","GDDSum1_11:PrecipSum1_11"))
TarsusTime2.bmdl <- stan_glm(Tarsus ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
TarsusTime2.bmdl <- stan_glm(Tarsus ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(TarsusTime2.bmdl), digits = 3)
TarsusGDDTime2.plot <- plot(TarsusTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
TarsusPlots.wrap <-ggarrange(TarsusGDDIncub.plot,TarsusGDDTime1.plot,TarsusGDDTime2.plot, ncol = 1)
annotate_figure(TarsusPlots.wrap, top = "Tarsus Models")
BDModelPlots.wrap <- ggarrange(BDGDDIncub.plot,BDGDDTime1.plot,BDGDDTime2.plot, ncol = 1)
BDIncub.bmdl <- stan_glm(BD ~ GDDSumIncubation * PrecipSumIncubation + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDIncub.bmdl), digits = 3)
#launch_shinystan(BDTime1.bmdl)
BDGDDIncub.plot <- plot(BDIncub.bmdl, pars = c("GDDSumIncubation","PrecipSumIncubation","Weight","CalcAge","GDDSumIncubation:PrecipSumIncubation"))
#BDGDDIncub.plot
BDTime1.scaled.mdl <- lm(data = scaled.df, BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge)
summary(BDTime1.scaled.mdl)
BDTime1.bmdl <- stan_glm(BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
BDTime1.bmdl <- stan_glm(BD ~ GDDSum1_11 * PrecipSum1_11 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDTime1.bmdl), digits = 3)
BDGDDTime1.plot <- plot(BDTime1.bmdl, pars = c("GDDSum1_11","PrecipSum1_11","Weight","CalcAge","GDDSum1_11:PrecipSum1_11"))
BDTime2.bmdl <- stan_glm(BD ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
BDTime2.bmdl <- stan_glm(BD ~ GDDSum12_22 * PrecipSum12_22 + Weight + CalcAge,
data = scaled.df,
family = gaussian(),
algorithm = "sampling",
prior = student_t(df = 7, 0, 5),
prior_intercept = student_t(df = 7, 0, 5),
cores = 2, seed = 666)
print(summary(BDTime2.bmdl), digits = 3)
BDGDDTime2.plot <- plot(BDTime2.bmdl, pars = c("GDDSum12_22","PrecipSum12_22","Weight","CalcAge","GDDSum12_22:PrecipSum12_22"))
BDModelPlots.wrap <- ggarrange(BDGDDIncub.plot,BDGDDTime1.plot,BDGDDTime2.plot, ncol = 1)
annotate_figure(BDModelPlots.wrap, top = "Bill Depth Interaction Models")
annotate_figure(BDModelPlots.wrap, top = "Bill Depth Models")
BDGDDIncubInter.plot <- plot_model(BDIncub.bmdl, type = "int", mdrt.values = "quart")
BDGDDIncubInter.plot <- BDGDDIncubInter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Upper Bill")+
xlab("GDD Incubation")+
theme(plot.title = element_blank(),
=======
scaled.df <- cbind(unScaled.df,scaled.mat)
summary(df)
summary(scaled.df)
#Males Scaled
M.scaled.df <- subset(scaled.df, AllSex=="M")
#Males Unscaled
M.df <- subset(df, AllSex=="M")
#Females Scaled
F.scaled.df <- subset(scaled.df, AllSex=="F")
#Females Unscaled
F.df <- subset(df, AllSex=="F")
#Both sexes scaled
B.scaled.df <- rbind(F.scaled.df,M.scaled.df)
#Both sexes unscaled
B.df <- rbind(F.df,M.df)
library(tidyverse)
library(dplyr)
library(broom) #tidy() to create tibbles from model summaries
library(car) #vif
library(cowplot)
library(lme4) #frequentist models
library(sjPlot) #plot_model & tab_model (blue = #377EB8)
library(ggpubr) #ggarrange
library(glmmTMB) #zi & overdispersed models
library(lmerTest) #lmerTest::step
library(ggeffects) #ggpredict
#PACKAGES FOR BAYESIAN MODELS
library(rstanarm) #stan models
library(shinystan) #stan model evaluation
#launch_shinystan_demo()
library(loo) #use loo() to compare fits between bayesian models
library(ggeffects)
library(plotly)
library(MuMIn) #dredge() for unsupervised model selection
library(AICcmodavg) #aictab() for AICc model comparisons
library(DHARMa)
library(DescTools)
library(umap)
library(tsne)
theme_set(theme_classic())
df <- read.csv("CrowNestlingClimate_AllNestlingsCleaned&ClimateJoined.csv", h=TRUE)
df <- df[,-1]
#n=2035 nestlings, 39 variables
df$Decades <- cut(df$Year, breaks = c(1988,1999,2010,2018), labels = c("89-99","00-10","11-18"))
df <- df %>% relocate(Decades, .before = Year)
#categorical data
unScaled.df <- df[,1:11]
#continuous data
dataToScale.df <- df[,12:40]
#scale continuous data
#?scale()
scaled.mat <- scale(dataToScale.df, center = TRUE, scale = TRUE)
#join unscaled and scaled data
scaled.df <- cbind(unScaled.df,scaled.mat)
summary(df)
summary(scaled.df)
#Males Scaled
M.scaled.df <- subset(scaled.df, AllSex=="M")
#Males Unscaled
M.df <- subset(df, AllSex=="M")
#Females Scaled
F.scaled.df <- subset(scaled.df, AllSex=="F")
#Females Unscaled
F.df <- subset(df, AllSex=="F")
#Both sexes scaled
B.scaled.df <- rbind(F.scaled.df,M.scaled.df)
#Both sexes unscaled
B.df <- rbind(F.df,M.df)
#Scaled tarsus
TarsusNoSex.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
TarsusNoSex.summ <- summary(TarsusNoSex.scaled.mdl)
B.df$TarsusNoSex.resids <- TarsusNoSex.summ$residuals
View(B.df)
B.scaled.df$TarsusNoSex.resids <- TarsusNoSex.summ$residuals
ggplot(data = B.scaled.df, aes(x=TarsusNoSex.resids,fill=AllSex))+
geom_histogram()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDIncubInter.plot
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Depth Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
ggplot(data = B.scaled.df, aes(x=TarsusNoSex.resids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDTime2Inter.plot
BDInterPlots.wrap <- ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
annotate_figure(BDInterPlots.wrap, top = "Bill Depth Interaction Models")
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Depth Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)+
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))#+
#geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
#geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)+
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)+
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)+
```
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="red", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="blue", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="#009E73", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="#E69F00", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
t.test(B.df$Tarsus[B.df$AllSex=="M"], B.df$Tarsus[B.df$AllSex=="F"])
#Scaled tarsus
TarsusNoSex.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
TarsusNoSex.summ <- summary(TarsusNoSex.scaled.mdl)
B.scaled.df$TarsusNoSex.resids <- TarsusNoSex.summ$residuals
ggplot(data = B.scaled.df, aes(x=TarsusNoSex.resids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDTime2Inter.plot
BDInterPlots.wrap <- ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
annotate_figure(BDInterPlots.wrap, top = "Bill Depth Interaction Models")
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Depth Bill")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
t.test(B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="M"])
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus, fill=AllSex))+
geom_point(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDTime2Inter.plot
BDInterPlots.wrap <- ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
annotate_figure(BDInterPlots.wrap, top = "Bill Depth Interaction Models")
BDGDDIncubInter.plot <- plot_model(BDIncub.bmdl, type = "int", mdrt.values = "quart")
BDGDDIncubInter.plot <- BDGDDIncubInter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Bill Depth")+
xlab("GDD Incubation")+
theme(plot.title = element_blank(),
=======
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus, fill=AllSex))+
geom_point()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDIncubInter.plot
BDInterPlots.wrap <- ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
annotate_figure(BDInterPlots.wrap, top = "Bill Depth Interaction Models")
BDGDDTime2Inter.plot <- plot_model(BDTime2.bmdl, type = "int", mdrt.values = "quart")
BDGDDTime2Inter.plot <- BDGDDTime2Inter.plot +
scale_color_discrete(name="Precip Levels", labels=c("25th Quartile","Median", "75th Quartile"))+
ylab("Bill Depth")+
xlab("GDD Time 2")+
theme(plot.title = element_blank(),
=======
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus, fill=AllSex))+
geom_point()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
<<<<<<< HEAD
#BDGDDTime2Inter.plot
BDInterPlots.wrap <- ggarrange(BDGDDIncubInter.plot,BDGDDTime2Inter.plot, ncol = 2)
annotate_figure(BDInterPlots.wrap, top = "Bill Depth Interaction Models")
UBModelPlots.wrap <- ggarrange(UBGDDIncub.plot,UBGDDTime1.plot,UBGDDTime2.plot, ncol = 1)
=======
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus))+
geom_point(fill=AllSex)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus))+
geom_point(fill=B.df$AllSex)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus,color=AllSex))+
geom_point()+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=Tarsus,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=TarsusNoSex.resids,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
t.test(B.df$BD[B.df$AllSex=="M"], B.df$BD[B.df$AllSex=="F"])
ggplot(data = B.df, aes(x=BD, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 12.98, color="#009E73", linetype="dashed", size=1)+
geom_vline(xintercept = 12.55, color="#E69F00", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
ggplot(data = B.df, aes(x=BD, fill = AllSex))+
geom_histogram(colour = "black", bins = 50)+
geom_vline(xintercept = 12.98, color="#009E73", linetype="dashed", size=1)+
geom_vline(xintercept = 12.55, color="#E69F00", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
#Scaled BD
BDNoSex.scaled.mdl <- lm(data = B.scaled.df, BD ~ Weight + CalcAge)
BDNoSex.summ <- summary(BDNoSex.scaled.mdl)
B.scaled.df$BDNoSex.resids <- BDNoSex.summ$residuals
ggplot(data = B.scaled.df, aes(x=BDNoSex.resids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=BDNoSex.resids,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
t.test(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
t.test(B.df$Tarsus[B.df$AllSex=="M"], B.df$Tarsus[B.df$AllSex=="F"])
ggplot(data = B.df, aes(x=Tarsus, fill = AllSex))+
geom_histogram(colour = "black", bins = 100)+
geom_vline(xintercept = 58.006, color="#009E73", linetype="dashed", size=1)+
geom_vline(xintercept = 59.9, color="#E69F00", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
#Scaled tarsus
TarsusNoSex.scaled.mdl <- lm(data = B.scaled.df, Tarsus ~ Weight + CalcAge)
TarsusNoSex.summ <- summary(TarsusNoSex.scaled.mdl)
B.scaled.df$TarsusNoSex.resids <- TarsusNoSex.summ$residuals
ggplot(data = B.scaled.df, aes(x=TarsusNoSex.resids,fill=AllSex))+
geom_histogram(colour = "black", bins = 100)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=Weight,y=TarsusNoSex.resids,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
t.test(B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="M"])
ggplot(data = B.scaled.df, aes(x=Tarsus,y=TarsusNoSex.resids,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.scaled.df, aes(x=BD,y=BDNoSex.resids,color=AllSex))+
geom_point()+
scale_color_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))+
theme(plot.title = element_text(size = 22),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14),
legend.position = "top",
plot.margin = margin(15,15,15,15))
ggplot(data = B.df, aes(x=BD, fill = AllSex))+
geom_histogram(colour = "black", bins = 50)+
geom_vline(xintercept = 12.55, color="#009E73", linetype="dashed", size=1)+
geom_vline(xintercept = 12.98, color="#E69F00", linetype="dashed", size=1)+
scale_fill_manual(values = c("#009E73","#E69F00"), labels = c("Female","Male"))
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="F"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="F"])
t.test(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="F"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="F"])
mean(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"])
t.test(B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$BDNoSex.resids[B.scaled.df$AllSex=="F"])
t.test(B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="M"],B.scaled.df$TarsusNoSex.resids[B.scaled.df$AllSex=="F"])
>>>>>>> bf2491ca191a994013e55aabe0694a5863968481
